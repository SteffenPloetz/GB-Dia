' Gambas class file

''' This class provides a basic set of edge stencils.
''' The edge stencils provide NO geometry.
'''
''' This class also implements a simple edge stencil provider.
''' It is planned to replace it with a file-based stencil set, that enables easy extension of the edge stencil set.

' ###############################################
' BEGIN Edge stencil functionality
' ###############################################

' -----------------------------------------------
' BEGIN Declarations, construction an destruction
' -----------------------------------------------

'' This constant identifies the type of the edge stencil as a **SequenceFlow** stencil.
'' Remarks: Keep this name in sync with the **BPMN.ProcessEdgeTypes** name.
Static Public Const SequenceFlow As String = "sequenceFlow"

'' This constant identifies the type of the shape stencil as a **MessageFlow** stencil.
'' Remarks: Keep this name in sync with the **BPMN.ProcessEdgeTypes** name.
Static Public Const MessageFlow As String = "messageFlow"


'' This constant defines the default font size for tect attributes.
Static Public Const DefaultFontSize As Float = 12

'' This constant defines the default font face for tect attributes.
Static Public Const DefaultFontFace As String = "Cantarell"


'' This property gets the unique type name of this shape stencil.
Property Read StencilName As String


'' Private - no description.
Private $sStencilName As String


'' Constructs a new edge stencil.
Public Sub _new(sStencilName As String)
  $sStencilName = sStencilName
End

'' Destructs the (actual) edge stencil.
Public Sub _free()
End

' -----------------------------------------------
' END Declarations, construction an destruction
' -----------------------------------------------

' -----------------------------------------------
' BEGIN Properties implementation
' -----------------------------------------------

'' Private - no description.
Private Function StencilName_Read() As String
  Return $sStencilName
End

' -----------------------------------------------
' End Properties implementation
' -----------------------------------------------

' -----------------------------------------------
' BEGIN Method implementation
' -----------------------------------------------

' -----------------------------------------------
' END Method implementation
' -----------------------------------------------

' ###############################################
' BEGIN Edge stencil functionality
' ###############################################

' ###############################################
' BEGIN Shape stencil provider functionality
' ###############################################

' -----------------------------------------------
' BEGIN Method implementation
' -----------------------------------------------

'' Checks whether the indicated stencil-name is known.
''
'' The **stencilName** argument defines the stencil-name to check.
Static Public Function HasStencil(stencilName As String) As Boolean
  Select Case stencilName
    Case SequenceFlow
      Return True
    Case MessageFlow
      Return True
  End Select

  Return False
End

'' Creates the indicated edge stencil.
''
'' The **sStencilName** argument defines the stencil-name of the requested shape stencil.
Static Public Function GetStencil(sStencilName As String) As EdgeStencil
  Select Case sStencilName
    Case SequenceFlow
      Return CreateSequenceFlow()
    Case Task
      Return CreateMessageFlow()
  End Select

  Return Null
End

'' Private - no description.
Static Private Function CreateSequenceFlow() As EdgeStencil
  Dim result As EdgeStencil = New EdgeStencil(SequenceFlow)
  Return result
End

'' Private - no description.
Static Private Function CreateMessageFlow() As EdgeStencil
  Dim result As EdgeStencil = New EdgeStencil(MessageFlow)
  Return result
End

